/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Sales as PrismaSales } from "@prisma/client";

export class SalesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SalesCountArgs, "select">): Promise<number> {
    return this.prisma.sales.count(args);
  }

  async salesItems<T extends Prisma.SalesFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SalesFindManyArgs>
  ): Promise<PrismaSales[]> {
    return this.prisma.sales.findMany<Prisma.SalesFindManyArgs>(args);
  }
  async sales<T extends Prisma.SalesFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SalesFindUniqueArgs>
  ): Promise<PrismaSales | null> {
    return this.prisma.sales.findUnique(args);
  }
  async createSales<T extends Prisma.SalesCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SalesCreateArgs>
  ): Promise<PrismaSales> {
    return this.prisma.sales.create<T>(args);
  }
  async updateSales<T extends Prisma.SalesUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SalesUpdateArgs>
  ): Promise<PrismaSales> {
    return this.prisma.sales.update<T>(args);
  }
  async deleteSales<T extends Prisma.SalesDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SalesDeleteArgs>
  ): Promise<PrismaSales> {
    return this.prisma.sales.delete(args);
  }
}
